{'LC_NUMERIC': 'C', 'GOOGLE_API_KEY': 'AIzaSyAQfxPJiounkhOjODEO5ZieffeBv6yft2Q', 'ATOM_HOME': '/root/.atom', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'XDG_CURRENT_DESKTOP': 'GNOME', 'LC_PAPER': 'C', 'LOGNAME': 'root', 'USER': 'root', 'HOME': '/root', 'XDG_VTNR': '7', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'DISPLAY': ':0.0', 'SSH_AGENT_PID': '1236', 'LANG': 'pl_PL.utf8', 'SHELL': '/bin/bash', 'XAUTHORITY': '/var/run/gdm3/auth-for-root-rQXIlY/database', 'SESSION_MANAGER': 'local/kali:@/tmp/.ICE-unix/1178,unix/kali:/tmp/.ICE-unix/1178', 'LC_MONETARY': 'C', 'NODE_ENV': 'production', 'WINDOWPATH': '7', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '12029', 'GPG_AGENT_INFO': '/run/user/0/keyring/gpg:0:1', 'USERNAME': 'root', 'XDG_SESSION_DESKTOP': 'default', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/atom.desktop', 'XDG_RUNTIME_DIR': '/run/user/0', 'SSH_AUTH_SOCK': '/run/user/0/keyring/ssh', 'GDMSESSION': 'default', 'XDG_DATA_DIRS': '/usr/share/gnome:/usr/local/share/:/usr/share/', 'XDG_SESSION_ID': '1', 'DBUS_SESSION_BUS_ADDRESS': 'unix:abstract=/tmp/dbus-FFzvCRpXGf,guid=d6ca33a225bc26aa68da42d75660679c', 'DESKTOP_SESSION': 'default', 'GDM_LANG': 'pl_PL.utf8', 'NODE_PATH': '/usr/share/atom/resources/app.asar/exports', 'LC_MEASUREMENT': 'C', 'PWD': '/root', 'DESKTOP_STARTUP_ID': 'nautilus-1390-kali-/usr/share/atom/atom-8_TIME23222611', 'XDG_MENU_PREFIX': 'gnome-', 'LC_TIME': 'C', 'XDG_SEAT': 'seat0'}